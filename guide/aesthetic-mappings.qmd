---
title: Aesthetic mappings
jupyter: python3
---

```{python}
from plotnine import *
from palmerpenguins import load_penguins

penguins = load_penguins()
```

Key points:

* aes() maps variables (columns) to chart dimensions (e.g. x, y, or color).
* literal mappings (e.g. hard-code color to "red") can be passed directly to geoms.
* aes() can be used in the initial `ggplot()` call, or inside specific `geoms()`.
* variable mappings in `aes()` can be simple names (e.g. `"somecol"`) or expressions (e.g. `"somecol / 10"`).
* mappings for an aesthetic can be tweaked using a scale function

## Basics

```{python}
(
    ggplot(
      data = penguins,
      mapping = aes(x = "flipper_length_mm", y = "body_mass_g")
    )
    + geom_point()
)
```

## Variable mappings

::: {.panel-tabset}

### Color

```{python}
(
    ggplot(
        penguins,
        aes(x = "flipper_length_mm", y = "body_mass_g", color = "species")
    ) +
    geom_point()
)

```

### Shape

```{python}
(
    ggplot(
        penguins,
        aes(
            x="flipper_length_mm", y="body_mass_g", shape="species"
        ),
    )
    + geom_point()
)
```

### Size and alpha

```{python}
(
    ggplot(
        penguins,
        aes(
            x="flipper_length_mm",
            y="body_mass_g",
            size="body_mass_g",
            alpha="body_mass_g",
        ),
    )
    + geom_point()
)
```

:::

## Literal mappings

Unlike 

```{python}
(
    ggplot(
        penguins,
        aes(x="flipper_length_mm", y="body_mass_g"),
    )
    + geom_point(size=7, alpha=.5, color="purple")
)
```

## `aes()` inside a specific geom

* draw a point over an outlier (a la R4DS)

```{python}
(
    ggplot(
        penguins,
        aes(x="flipper_length_mm", y="body_mass_g"),
    )
    + geom_point(aes(color="species"), size=5)   # big circle points
    + geom_point(aes(shape="species"))           # shape points
)
```


## `aes()` with collective geoms

```{python}
(
    ggplot(
        data=penguins,
        mapping=aes(
            x="flipper_length_mm", y="body_mass_g"
        ),
    )
    + geom_point()
    + geom_smooth(method="lm")
)
```

## `aes()` collective groupings

```{python}
(
    ggplot(
        data=penguins,
        mapping=aes(
            x="flipper_length_mm", y="body_mass_g", color="species"
        ),
    )
    + geom_point()
    + geom_smooth(method="lm")
)
```


```{python}
(
    ggplot(
        data=penguins, mapping=aes(x="flipper_length_mm", y="body_mass_g")
    )
    + geom_point(aes(color="species"))
    + geom_smooth(method="lm")
)
```

## Mappings allow expressions

## Mappings result in scales

* numeric
* categorical
* datetime
